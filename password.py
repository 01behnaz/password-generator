# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'password.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import *
import random
from PyQt5.QtWidgets import QApplication


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(352, 580)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons8-password-100.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(61, 131, 97);\n"
                                 "border-radius: 5px;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 20, 181, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(238, 242, 230);\n"
                                 "font: 75 14pt \"MS Shell Dlg 2\";\n""")
        self.label.setObjectName("label")

        self.label_chl = QtWidgets.QLabel(self.centralwidget)
        self.label_chl.setGeometry(QtCore.QRect(20, 80, 125, 40))
        self.label_chl.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";\n"
                                     "color: rgb(238, 242, 230);")
        self.label_chl.setObjectName("label_chl")

        self.label_npassword = QtWidgets.QLabel(self.centralwidget)
        self.label_npassword.setGeometry(QtCore.QRect(20, 120, 155, 40))
        self.label_npassword.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";\n"
                                           "color: rgb(238, 242, 230);")
        self.label_npassword.setObjectName("label_npassword")

        self.checkBox_digit = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_digit.setGeometry(QtCore.QRect(20, 180, 80, 40))
        self.checkBox_digit.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";\n"
                                          "color: rgb(238, 242, 230);")
        self.checkBox_digit.setChecked(True)
        self.checkBox_digit.setObjectName("checkBox_digit")

        self.checkBox_letter = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_letter.setGeometry(QtCore.QRect(20, 225, 80, 40))
        self.checkBox_letter.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";\n"
                                           "color: rgb(238, 242, 230);")
        self.checkBox_letter.setChecked(True)
        self.checkBox_letter.setObjectName("checkBox_letter")

        self.checkBox_scharacter = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_scharacter.setGeometry(QtCore.QRect(20, 270, 140, 40))
        self.checkBox_scharacter.setStyleSheet("font: 11pt \"MS Shell Dlg 2\";\n"
                                               "color: rgb(238, 242, 230);")
        self.checkBox_scharacter.setChecked(True)
        self.checkBox_scharacter.setObjectName("checkBox_scharacter")

        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(10, 330, 331, 221))
        self.textEdit.setStyleSheet("background-color: rgb(238, 242, 230);\n"
                                    "border-radius: 5px;")
        self.textEdit.setObjectName("textEdit")

        self.lineEdit_npassword = QtWidgets.QLineEdit(
            self.centralwidget)
        self.lineEdit_npassword.setGeometry(QtCore.QRect(215, 130, 115, 20))
        self.lineEdit_npassword.setStyleSheet("background-color: rgb(238, 242, 230);\n"
                                              "border-radius: 5px;")
        self.lineEdit_npassword.setObjectName("lineEdit_npassword")

        self.lineEdit_chl = QtWidgets.QLineEdit(
            self.centralwidget)
        self.lineEdit_chl.setGeometry(QtCore.QRect(215, 90, 115, 20))
        self.lineEdit_chl.setStyleSheet("background-color: rgb(238, 242, 230);\n"
                                        "border-radius: 5px;")
        self.lineEdit_chl.setObjectName("lineEdit_chl")

        self.pushButton_generate = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_generate.setGeometry(QtCore.QRect(250, 180, 80, 31))
        self.pushButton_generate.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_generate.setStyleSheet("\n"
                                               "QPushButton{\n"
                                               " color: rgb(0, 0, 0);\n"
                                               " background-color: rgb(214, 205, 164);\n"
                                               "font: 11pt \"MS Shell Dlg 2\";\n"
                                               " border-radius: 5px;\n"
                                               "}\n"
                                               "QPushButton:Hover{\n"
                                               " color: rgb(0, 0, 0);\n"
                                               " background-color:rgb(238, 242, 230) ;\n"
                                               "}\n"
                                               "")
        self.pushButton_generate.setObjectName("pushButton_generate")
        self.pushButton_generate.clicked.connect(self.generate)

        self.pushButton_copy = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_copy.setGeometry(QtCore.QRect(250, 225, 80, 31))
        self.pushButton_copy.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_copy.setStyleSheet("\n"
                                           "QPushButton{\n"
                                           " color: rgb(0, 0, 0);\n"
                                           " background-color: rgb(214, 205, 164);\n"
                                           "font: 11pt \"MS Shell Dlg 2\";\n"
                                           " border-radius: 5px;\n"
                                           "}\n"
                                           "QPushButton:Hover{\n"
                                           " color: rgb(0, 0, 0);\n"
                                           " background-color:rgb(238, 242, 230) ;\n"
                                           "}")
        self.pushButton_copy.setObjectName("pushButton_copy")
        self.pushButton_copy.clicked.connect(self.copy)

        self.pushButton_clear = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_clear.setGeometry(QtCore.QRect(250, 270, 80, 31))
        self.pushButton_clear.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_clear.setStyleSheet("\n"
                                            "QPushButton{\n"
                                            " color: rgb(0, 0, 0);\n"
                                            " background-color: rgb(214, 205, 164);\n"
                                            "font: 11pt \"MS Shell Dlg 2\";\n"
                                            " border-radius: 5px;\n"
                                            "}\n"
                                            "QPushButton:Hover{\n"
                                            " color: rgb(0, 0, 0);\n"
                                            " background-color:rgb(238, 242, 230) ;\n"
                                            "}\n"
                                            "")
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_clear.clicked.connect(self.clear)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def generate_password(self):
        global mylist
        n = 0
        while n < int(self.lineEdit_npassword.text()):
            result = random.choices(mylist, k=int(self.lineEdit_chl.text()))
            n += 1
            random.shuffle(result)
            list_to_string = ''.join(map(str, result))
            return list_to_string

    def output_password(self):
        n = 0
        while n < int(self.lineEdit_npassword.text()):
            self.password_str = self.generate_password() + '\n'
            self.textEdit.append(self.password_str)
            n += 1

    def generate(self):
        global mylist
        digit = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',
                  'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
        scharacter = [
            '!', '#', '(', '$', '%', '&', '*', '+', '-', '/', '<', '=', ')', '>', '?', '@']
        if 1 <= int(self.lineEdit_npassword.text()) <= 1000 and 6 <= int(self.lineEdit_chl.text()) <= 100:
            if self.checkBox_digit.isChecked() and self.checkBox_letter.isChecked() and self.checkBox_scharacter.isChecked():
                mylist = digit + letter + scharacter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_digit.isChecked() and self.checkBox_letter.isChecked():
                mylist = digit + letter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_digit.isChecked() and self.checkBox_scharacter.isChecked():
                mylist = digit + scharacter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_letter.isChecked() and self.checkBox_scharacter.isChecked():
                mylist = letter + scharacter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_digit.isChecked():
                mylist = digit
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_letter.isChecked():
                mylist = letter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            elif self.checkBox_scharacter.isChecked():
                mylist = scharacter
                random.shuffle(mylist)
                self.generate_password()
                self.output_password()

            else:
                msg = QMessageBox()
                msg.setWindowIcon(QIcon('icons8-error-100.png'))
                msg.setIcon(QMessageBox.Warning)
                msg.setWindowTitle("Warning")
                msg.setText("Select at least one option!!")
                msg.exec_()
        else:
            msg = QMessageBox()
            msg.setWindowIcon(QIcon('icons8-error-100.png'))
            msg.setIcon(QMessageBox.Warning)
            msg.setWindowTitle("Warning")
            msg.setText(
                "The character length cannot be less than 6 or more than 100! \nThe number of passwords should be less than 1000!")
            msg.exec_()

    def copy(self):
        QApplication.clipboard().setText(self.textEdit.toPlainText())
        msg = QMessageBox()
        msg.setWindowIcon(QIcon('icons8-info-100.png'))
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle("Information")
        msg.setText("Passwords were copied to the clipboard!!")
        msg.exec_()

    def clear(self):
        self.textEdit.clear()
        msg = QMessageBox()
        msg.setWindowIcon(QIcon('icons8-info-100.png'))
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle("Information")
        msg.setText("Passwords cleared!!")
        msg.exec_()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(
            "MainWindow", "Password Generator"))
        self.label.setText(_translate("MainWindow", " Password Generator"))
        self.label_chl.setText(_translate("MainWindow", " Character length"))
        self.label_npassword.setText(_translate(
            "MainWindow", " Number of passwords"))
        self.checkBox_digit.setText(_translate("MainWindow", " Digits"))
        self.checkBox_letter.setText(_translate("MainWindow", " Letters "))
        self.checkBox_scharacter.setText(
            _translate("MainWindow", " Special Character"))
        self.pushButton_generate.setText(_translate("MainWindow", "Generate"))
        self.pushButton_copy.setText(_translate("MainWindow", "Copy"))
        self.pushButton_clear.setText(_translate("MainWindow", "Clear"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
